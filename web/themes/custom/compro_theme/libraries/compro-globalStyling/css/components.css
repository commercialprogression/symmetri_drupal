/**
 * @file
 * Component and class-level styles.
 */

/**
 * Ensure editing pencils are as close to their elements as possible.
 */
[data-quickedit-entity-id] {
  position: relative;
}

/**
 * Background-color classes for the settings dropdowns. Add here as needed.
 */
.background-color--black,
.background-color--black.has-field-image-background .hover--bg:hover {
  background-color: var(--color--black);
}
.background-color--grey-dark,
.background-color--grey-dark.has-field-image-background .hover--bg:hover {
  background-color: var(--color--grey-dark);
}
.background-color--grey,
.background-color--grey.has-field-image-background .hover--bg:hover {
  background-color: var(--color--grey);
}
.background-color--grey-light,
.background-color--grey-light.has-field-image-background .hover--bg:hover {
  background-color: var(--color--grey-light);
}
.background-color--white {
  background-color: var(--color--white);
}
.background-color--white.has-field-image-background .hover--bg:hover {
  background-color: var(--color--grey-light);
}
.background-color--main,
.background-color--main.has-field-image-background .hover--bg:hover,
.background-color--blue,
.background-color--blue.has-field-image-background .hover--bg:hover {
  background-color: var(--color--main);
}
.background-color--main-dark,
.background-color--main-dark.has-field-image-background .hover--bg:hover,
.background-color--blue-dark,
.background-color--blue-dark.has-field-image-background .hover--bg:hover {
  background-color: var(--color--main-dark);
}
.background-color--main-light,
.background-color--main-light.has-field-image-background .hover--bg:hover,
.background-color--blue-light,
.background-color--blue-light.has-field-image-background .hover--bg:hover {
  background-color: var(--color--main-light);
}
.background-color--second,
.background-color--second.has-field-image-background .hover--bg:hover {
  background-color: var(--color--second);
}
.background-color--second-dark,
.background-color--second-dark.has-field-image-background .hover--bg:hover {
  background-color: var(--color--second-dark);
}
.background-color--second-light,
.background-color--second-light.has-field-image-background .hover--bg:hover {
  background-color: var(--color--second-light);
}
.background-color--third,
.background-color--third.has-field-image-background .hover--bg:hover {
  background-color: var(--color--third);
}
.background-color--third-dark,
.background-color--third-dark.has-field-image-background .hover--bg:hover {
  background-color: var(--color--third-dark);
}
.background-color--third-light,
.background-color--third-light.has-field-image-background .hover--bg:hover {
  background-color: var(--color--third-light);
}
.background-color--accent,
.background-color--accent.has-field-image-background .hover--bg:hover {
  background-color: var(--color--accent);
}

/**
 * A class for a settings checkbox that hides background images on mobile.
 */
@media all and (max-width: 1023px) {
  .background-image-display-mobile--hide {
    background-image: none;
  }
}

/**
 * Header logo block.
 */
.block-system-branding-block {}
.block-system-branding-block a {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  display: inline-block;
  padding: 18px 0 16px;
}
.block-system-branding-block h1 {
  line-height: 0;
}

/**
 * Blockquote checkbox classes for adding opening and closing quotes as needed.
 *
 * Especially useful if the opening/closing quotes have to look different than
 * the text in some way.
 */
.blockquote--closing-include {
  min-height: 80px;
  padding-right: 80px;
}
.blockquote--closing-include::after {
  bottom: -.17ch;
  content: "\201D";
  display: block;
  right: -.1ch;
}
.blockquote--opening-include {
  min-height: 80px;
  padding-left: 80px;
}
.blockquote--opening-include::before {
  content: "\201C";
  display: block;
  left: -.1ch;
  top: .65ch;
}

/**
 * Generic borders.
 */
.border--1px-solid {
  border: 1px solid;
}
.border-bottom--1px-solid {
  border-bottom: 1px solid;
}

/**
 * Allow links component buttons to have selectable backgrounds.
 */
.child-element-background-color--black > *,
.child-links-background-color--black a {
  background-color: var(--color--black);
}
.child-element-background-color--grey-dark > *,
.child-links-background-color--grey-dark a {
  background-color: var(--color--grey-dark);
}
.child-element-background-color--grey > *,
.child-links-background-color--grey a {
  background-color: var(--color--grey);
}
.child-element-background-color--grey-light > *,
.child-links-background-color--grey-light a {
  background-color: var(--color--grey-light);
  color: var(--color--main);
}
.child-element-background-color--white > *,
.child-links-background-color--white a {
  background-color: var(--color--white);
  color: var(--color--main);
}
.child-element-background-color--main > *,
.child-links-background-color--main a,
.child-element-background-color--blue > *,
.child-links-background-color--blue a {
  background-color: var(--color--main);
}
.child-element-background-color--main-dark > *,
.child-links-background-color--main-dark a,
.child-element-background-color--blue-dark > *,
.child-links-background-color--blue-dark a {
  background-color: var(--color--main-dark);
}
.child-element-background-color--main-light > *,
.child-links-background-color--main-light a,
.child-element-background-color--blue-light > *,
.child-links-background-color--blue-light a {
  background-color: var(--color--main-light);
}
.child-element-background-color--second > *,
.child-links-background-color--second a {
  background-color: var(--color--second);
}
.child-element-background-color--second-dark > *,
.child-links-background-color--second-dark a {
  background-color: var(--color--second-dark);
}
.child-element-background-color--second-light > *,
.child-links-background-color--second-light a {
  background-color: var(--color--second-light);
}
.child-element-background-color--third > *,
.child-links-background-color--third a {
  background-color: var(--color--third);
}
.child-element-background-color--third-dark > *,
.child-links-background-color--third-dark a {
  background-color: var(--color--third-dark);
}
.child-element-background-color--third-light > *,
.child-links-background-color--third-light a {
  background-color: var(--color--third-light);
}
.child-element-background-color--accent > *,
.child-links-background-color--accent a {
  background-color: var(--color--accent);
}

/**
 * Overrides to chosen dropdowns.
 */
.chosen-container {
  font-size: 16px;
}
.chosen-container-single .chosen-single {
  padding: 0 0 0 10px;
  height: 40px;
  border: 1px solid var(--color--grey);
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  background: var(--color--white);
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  color: #333;
  line-height: 1.35;
}
.chosen-container-active.chosen-with-drop .chosen-single {
  background-image: none;
  border: 1px solid var(--color--grey);
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}
.chosen-container-multi {
  background: var(--color--white);
  border: 1px solid var(--color--grey);
  padding: 6px 5px 5px 0;
}
.chosen-container-multi .chosen-choices {
  background: var(--color--white) url("../images/select-handle.svg") no-repeat scroll right center;
  border: 0 none;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  padding: 0 26px 0 10px;
}
.chosen-container-multi .chosen-choices li.search-field input[type="text"] {
  color: var(--color--grey);
}
.chosen-container-single .chosen-single span {
  margin: 9px 26px 9px 0;
}
.chosen-container-single .chosen-single div {
  padding: 0 5px 0 0;
}
.chosen-container-single .chosen-single div b {
  background: transparent url("../images/select-handle.svg") no-repeat center center;
}
.chosen-container .chosen-drop {
  border: 1px solid var(--color--grey);
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}

/**
 * Color classes for the settings dropdowns. Add here as needed.
 */
.color--black {
  color: var(--color--black);
}
.color--grey-dark {
  color: var(--color--grey-dark);
}
.color--grey {
  color: var(--color--grey);
}
.color--grey-light {
  color: var(--color--grey-light);
}
.color--white {
  color: var(--color--white);
}
.color--white a {
  color: var(--color--white);
}
.color--main,
.color--blue {
  color: var(--color--main);
}
.color--main-dark,
.color--blue-dark {
  color: var(--color--main-dark);
}
.color--main-light,
.color--blue-light {
  color: var(--color--main-light);
}
.color--second {
  color: var(--color--second);
}
.color--second-dark {
  color: var(--color--second-dark);
}
.color--second-light {
  color: var(--color--second-light);
}
.color--third {
  color: var(--color--third);
}
.color--third-dark {
  color: var(--color--third-dark);
}
.color--third-light {
  color: var(--color--third-light);
}
.color--accent {
  color: var(--color--accent);
}

/**
 * When you need to set text in columns that auto-adjust to their container.
 */
.columnar--2-column,
.columnar--3-column,
.columnar--4-column {
  -moz-column-count: 2;
  -webkit-column-count: 2;
  column-count: 2;
  -moz-column-gap: 40px;
  -webkit-column-gap: 40px;
  column-gap: 40px;
}
.columnar--3-column {
  -moz-column-count: 3;
  -webkit-column-count: 3;
  column-count: 3;
}
.columnar--4-column {
  -moz-column-count: 4;
  -webkit-column-count: 4;
  column-count: 4;
}
.columnar--2-column > *,
.columnar--3-column > *,
.columnar--4-column > * {
  -webkit-column-break-inside: avoid;
  -moz-column-break-inside: avoid;
  break-inside: avoid-column;
  page-break-inside: avoid;
}
@media all and (max-width: 767px) {
  .columnar--2-column,
  .columnar--3-column,
  .columnar--4-column {
    -moz-column-count: 1;
    -webkit-column-count: 1;
    column-count: 1;
  }
}

/**
 * Since property--value doesn't have enough flex, display, or cursor classes,
 * this fills in for the needed ones.
 */
.cursor--pointer {
  cursor: pointer;
}

/**
 * Link components.
 */
.entity-bundle-link a {
  display: inline-block;
  margin: 0 20px 20px 0;
}
.entity-bundle-link a:last-child {
  margin: 0 0 20px 0;
}

/**
 * Rich text markup styles.
 */
.entity-bundle-rich-text {}
.entity-bundle-rich-text > blockquote,
.entity-bundle-rich-text > div,
.entity-bundle-rich-text > figure,
.entity-bundle-rich-text > ol,
.entity-bundle-rich-text > p,
.entity-bundle-rich-text > ul {
  margin-top: 1em;
  margin-bottom: 1em;
}
.entity-bundle-rich-text > h2,
.entity-bundle-rich-text > h3,
.entity-bundle-rich-text > h4,
.entity-bundle-rich-text > h5,
.entity-bundle-rich-text > h6 {
  margin-top: 1em;
  margin-bottom: .25em;
}

/**
 * Spacers.
 *
 * Hide spacers on mobile if they're just holding place in a horizontal layout.
 */
@media all and (max-width: 767px) {
  .entity-bundle-spacer:only-child {
    display: none;
  }
}

/**
 * Cards (standard).
 */
.entity--card-standard {
  border: 1px solid;
  margin: 0 30px 30px 0;
  max-width: 355px;
  padding: 30px 30px;
}
@media all and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  /* Browser targeting hack to make max-width work in flex. */
  .entity--card-standard {
    flex-basis: 355px;
  }
}
@media all and (min-width: 768px) {
  .entity--card-standard {
    min-width: 207px;
  }
}
@media all and (max-width: 767px) {
  .entity--card-standard {
    margin: 0 auto 30px;
  }
}
.entity--card-standard h2 {
  margin-top: 0;
  margin-left: auto;
  margin-right: auto;
}
.entity--card-standard img + h2 {
  margin-top: 20px;
}
.entity--card-standard > .field {
  margin-bottom: 30px;
}
.entity--card-standard > .field:last-child {
  margin-bottom: 0;
}
/* When a card has an image, the extra bottom padding is accounted for in the comps. */
.entity--card-standard.has-field-image > .field:last-child {
  margin-bottom: 30px;
}

/**
 * Hide RSS icons while leaving them present for discovery.
 */
.feed-icons {
  display: none;
}

/**
 * Ensure vertical spacing from video fields.
 */
.field-formatter--file-video {
  line-height: 0;
}

/**
 * Video background field for stripes.
 */
.field-name--field-video-background {
  display: none;
}
@media all and (min-width: 768px) {
  .field-name--field-video-background {
    bottom: 0;
    display: block;
    left: 0;
    overflow: hidden;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1;
  }

  .field-name--field-video-background > video {
    left: 50%;
    margin: 0;
    min-height: 650px;
    min-width: 1920px;
    position: absolute;
    top: 0;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%);
  }
}
@media all and (min-width: 1920px) {
  .field-name--field-video-background > video {
    min-width: 100vw !important;
  }
}

/**
 * IE11 doesn't play nice with flex columns containing images and videos, so let's blow it away.
 */
@media all and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  /* Browser targeting hack to make max-width work in flex. */
  .entity-bundle-column.contains-component--media.flex-direction--column,
  .teaser--image.flex-direction--column,
  .entity--card-standard {
    display: block;
  }
}

/**
 * Override property--value's weird initial/none behavior.
 */
.flex--initial {
  -webkit-box-flex: 0;
  -webkit-flex: 0;
  -moz-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}
/* Oddly-specific override for SVGs and <img>s. max-width to half viewport. */
.flex--initial svg,
.flex--initial img {
  max-width: 780px;
}


/**
 * Font size multiplier classes, like property--value but bad and client-specific.
 */
.font-size--p375em {
  font-size: .375em;
}
.font-size--p5em {
  font-size: .5em;
}
.font-size--p625em {
  font-size: .625em;
}
.font-size--p75em {
  font-size: .75em;
}
.font-size--p875em {
  font-size: .875em;
}
.font-size--1em {}
.font-size--1-125em {
  font-size: 1.125em;
}
.font-size--1-25em {
  font-size: 1.25em;
}
.font-size--1-375em {
  font-size: 1.375em;
}
.font-size--1-5em {
  font-size: 1.5em;
}
.font-size--1-625em {
  font-size: 1.625em;
}
.font-size--1-75em {
  font-size: 1.75em;
}
.font-size--1-875em {
  font-size: 1.875em;
}
.font-size--2em {
  font-size: 2em;
}

/**
 * Video backgrounds for stripes/heroes.
 */
.has-field-video-background {
  position: relative;
}
@media all and (min-width: 768px) {
  .has-field-video-background .contextual-region {
    position: static;
  }
  .has-field-video-background .entity-type-component {
    position: relative;
    z-index: 3;
  }
  .has-field-video-background .field-name--field-video-background {
    position: absolute;
    z-index: 1;
  }
}

/**
 * The wrapper for both the top bar and the splash.
 *
 * Applying a default background at this level, which will be covered entirely
 * by a splash.
 */
.header-and-splash {
  background: var(--color--grey) url('../images/bg_hero_default.jpg') center center scroll no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

/**
 * Sticky main header for the site.
 */
@media all and (min-width: 1024px) {
  .headroom {
    left: 0;
    position: fixed;
    right: 0;
    -webkit-transition: all .3s ease-in;
    -o-transition: all .3s ease-in;
    -moz-transition: all .3s ease-in;
    transition: all .3s ease-in;
    will-change: transform;
    z-index: 100;
  }
  .headroom--pinned {
    -webkit-transform: translateY(0%);
    -moz-transform: translateY(0%);
    -ms-transform: translateY(0%);
    -o-transform: translateY(0%);
    transform: translateY(0%);
  }
  .headroom--unpinned {
    -webkit-transform: translateY(-100%);
    -moz-transform: translateY(-100%);
    -ms-transform: translateY(-100%);
    -o-transform: translateY(-100%);
    transform: translateY(-100%);
  }
}
.top-bar {
  background-color: var(--color--grey);
}

/**
 * Hotspots.
 */
.hotspot {}
.has--hotspots {
  position: relative;
}
.has--hotspots > img {
  margin-bottom: 0 !important;
}
.has--hotspots > .field-name--field-text {
  background-color: var(--color--grey);
  background-color: rgba(34,34,34,.9);
  bottom: 0;
  color: var(--color--grey);
  left: 0;
  padding: 5px;
  position: absolute;
  right: 0;
}
.hotspot-anchor,
.hotspot-anchor:link {
  background-color: var(--color--grey);
  border-radius: 50%;
  color: var(--color--grey);
  display: none;
  font-weight: bold;
  height: 1em;
  line-height: 1;
  padding: 5px;
  text-decoration: none;
  transition: all .3s ease-in;
  width: 1em;
}
.hotspot-anchor:hover,
.hotspot-anchor:active,
.hotspot-anchor:focus {
  background-color: var(--color--grey);
  transform: rotate(45deg);
}
.js .hotspot-anchor {
  display: block;
}
.hotspot-content {
  background-color: var(--color--grey);
  border-radius: 3px;
  box-shadow: 0 0 5px var(--color--grey);
  color: #333;
  padding: 5px 10px;
}
.js .hotspot-content {
  display: none;
}
.entity-bundle-hotspot {
  position: absolute;
}
.entity-bundle-hotspot:focus .hotspot-content,
.entity-bundle-hotspot:focus-within .hotspot-content,
.entity-bundle-hotspot .hotspot-content:target {
  display: block;
}
.js .entity-bundle-hotspot:focus .hotspot-content,
.js .entity-bundle-hotspot:focus-within .hotspot-content {
  display: none;
}

/**
 * Override core inline list padding.
 */
ul.inline li:first-child {
  padding: 0 0.5em 0 0;
}

/**
 * Used in conjunction with compro-animate to trigger animated visibility.
 */
.js .revealOnScroll {
  opacity: 0;
}
.js .revealOnScroll.animated {
  opacity: 1;
  -webkit-animation-duration: 2s;
  -moz-animation-duration: 2s;
  -o-animation-duration: 2s;
  animation-duration: 2s;
}
@media all and (max-width: 770px) {
  .js .revealOnScroll.animated {
    -webkit-animation-duration: 0s;
    -moz-animation-duration: 0s;
    -o-animation-duration: 0s;
    animation-duration: 0s;
    -webkit-animation-name: none;
    -moz-animation-name: none;
    -o-animation-name: none;
    animation-name: none;
  }
}

/**
 * Line-heights.
 */
.line-height--1 {
  line-height: 1;
}

/**
 * Max-heights.
 */
.max-height--56px {
  max-height: 56px;
}
.max-height--400px {
  max-height: 400px;
}
@media all and (max-width: 768px) {
  .max-height--400px {
    max-height: none;
  }
}

/**
 * Core messages.
 */
.messages {
  font-style: italic;
  margin: 10px 0;
  padding: 10px;
}
.messages--error {
  background: var(--color--grey);
  color: var(--color--grey);
}
.messages--status {
  background: var(--color--grey);
  color: var(--color--grey);
}
.messages--warning {
  background: var(--color--grey);
  color: var(--color--grey);
}

/**
 * Min-heights for teaser images and such.
 */
.min-height--160px {
  min-height: 160px;
}

/**
 * Min-width classes for flex wrapping.
 */
@media all and (min-width: 768px) {
  .min-width--280px {
    min-width: 280px;
  }
}

/**
 * Core class for the links at the bottom of node teasers.
 */
.node__links {
  margin: 20px 0 0;
}

/**
 * Make the "Read more" links more interesting.
 */
.node-readmore {
  font-size: .75em;
}
.node-readmore .button {
  margin: 10px 0 0;
  padding: 5px 10px;
}
.node-readmore .icon:before {
  margin-right: 5px;
}

/**
 * Overflow classes a la property--value.
 */
.overflow-y--auto {
  overflow-y: auto;
}
.overflow-y--scroll {
  overflow-y: scroll;
}
@media all and (max-width: 768px) {
  .overflow-y--auto,
  .overflow-y--scroll {
    overflow-y: visible;
  }
}

/**
 * Padding classes.
 *
 * Horizontal for column section entities. At the mobile breakpoint the padding
 * zeroes out for consistency.
 *
 * Columns are then vertically spaced using flex classes from property--value.
 */
.padding--20px {
  padding: 20px;
}
.padding-horizontal--0 {
  padding-left: 0;
  padding-right: 0;
}
.padding-horizontal--1 {
  padding-left: 5px;
  padding-right: 5px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--1 {
    padding-left: 0;
    padding-right: 0;
  }
}
.padding-horizontal--2 {
  padding-left: 10px;
  padding-right: 10px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--2 {
    padding-left: 0;
    padding-right: 0;
  }
}
.padding-horizontal--4 {
  padding-left: 20px;
  padding-right: 20px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--4 {
    padding-left: 0;
    padding-right: 0;
  }
  [class*="border"].padding-horizontal--4 {
    padding-left: 20px;
    padding-right: 20px;
  }
}
.padding-horizontal--8 {
  padding-left: 40px;
  padding-right: 40px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--8 {
    padding-left: 0;
    padding-right: 0;
  }
}
.padding-horizontal--16 {
  padding-left: 80px;
  padding-right: 80px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--16 {
    padding-left: 0;
    padding-right: 0;
  }
}
.padding-horizontal--32 {
  padding-left: 160px;
  padding-right: 160px;
}
@media all and (max-width: 767px) {
  .padding-horizontal--32 {
    padding-left: 0;
    padding-right: 0;
  }
}
.padding-right--16 {
  padding-right: 40px;
}
.padding-vertical--0 {
  padding-bottom: 0;
  padding-top: 0;
}
.padding-vertical--1 {
  padding-bottom: 5px;
  padding-top: 5px;
}
.padding-vertical--2 {
  padding-bottom: 10px;
  padding-top: 10px;
}
.padding-vertical--4 {
  padding-bottom: 20px;
  padding-top: 20px;
}
.padding-vertical--8 {
  padding-bottom: 40px;
  padding-top: 40px;
}
@media all and (max-width: 960px) {
  .padding-vertical--8 {
    padding-bottom: 20px;
    padding-top: 20px;
  }
}
.padding-vertical--16 {
  padding-bottom: 80px;
  padding-top: 80px;
}
@media all and (max-width: 960px) {
  .padding-vertical--16 {
    padding-bottom: 40px;
    padding-top: 40px;
  }
}
.padding-vertical--32 {
  padding-bottom: 160px;
  padding-top: 160px;
}
@media all and (max-width: 960px) {
  .padding-vertical--32 {
    padding-bottom: 80px;
    padding-top: 80px;
  }
}

/**
 * Core pagers.
 */
.pager {
  font-weight: 600;
  margin: 40px auto;
  text-align: center;
  text-transform: uppercase;
}
.pager ul {
  display: inline-block;
  margin: 0;
  padding: 0;
}
.pager ul > li {
  display: inline-block;
  line-height: 1;
  margin: 0;
}
.pager li > a,
.pager li > span {
  color: var(--color--grey);
  display: inline-block;
  padding: 5px 10px;
  text-decoration: none;
}
.pager li > a:hover {
  border-color: var(--color--grey);
}
.pager li.pager-current > span,
.pager li.pager-current > a,
.pager li.is-active > span,
.pager li.is-active > a {
  border-color: var(--color--grey);
}
.pager li.pager__item--previous {
  border-right: 1px solid var(--color--grey);
  margin-right: 4px;
  padding-right: 16px;
}
.pager li.pager__item--next {
  border-left: 1px solid var(--color--grey);
  margin-left: 4px;
  padding-left: 16px;
}

/**
 * The front page often has some strange overrides.
 */
.path-frontpage {}

/**
 * Add stylistic pipes to lists.
 */
 @media all and (min-width: 768px) {
  .pipe-spaced {}
  .pipe-spaced li::after {
    content: '|';
    display: inline-block;
    font-weight: 300;
    opacity: .9;
    padding: 0 2px;
    vertical-align: middle;
  }
  .pipe-spaced li:last-child::after,
  .pipe-spaced li.last::after {
    display: none;
  }
}

/**
 * Utility class for printer page breaks.
 */
.print-break {
  page-break-before: always;
}

/**
 * Rollovers for the bio cards.
 */
.rollover {
  padding: 0;
  position: relative;
}
.rollover--hover {
  background-color: var(--color--grey);
  background-color: rgba(34, 34, 34, 0.75);
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  padding: 0 30px;
  position: absolute;
  right: 0;
  top: 0;
  -webkit-transition: all .5s;
  -moz-transition: all .5s;
  -o-transition: all .5s;
  transition: all .5s;
}
@media (prefers-reduced-motion: reduce) {
  .rollover--hover {
    -webkit-transition: unset;
    -o-transition: unset;
    -moz-transition: unset;
    transition: unset;
  }
}
@media all and (min-width: 1024px) {
  .rollover--hover {
    background-color: rgba(26, 66, 138, 1);
    top: 100%;
  }
  .rollover:hover .rollover--hover,
  .rollover:active .rollover--hover,
  .rollover:focus .rollover--hover,
  .rollover .rollover--hover:focus,
  .rollover .rollover--hover:focus-within {
    background-color: rgba(34, 34, 34, 0.75);
    top: 0;
  }
}

/**
 * Site slogan.
 */
.site-slogan {
  color: var(--color--grey);
  font-size: 15px;
  font-weight: 600;
  margin: -6px 0 0;
}

/**
 * Skip-to-main-content links for accessibility.
 */
.skip-hide {
  background: var(--color--grey);
  position: relative;
  text-align: center;
}
.skip-hide a {
  color: var(--color--grey);
  display: block;
  height: 1px;
  left: -10000px;
  overflow: hidden;
  padding: 10px;
  position: absolute;
  top: auto;
  width: 1px;
}
.skip-hide a:focus {
  height: auto;
  outline: 0 none;
  position: static;
  width: auto;
}

/**
 * Compro-slick slideshow base classes.
 */
.slick-arrow {
  background-color: transparent;
  border-top: 30px solid transparent;
  border-bottom: 30px solid transparent;
  bottom: 50%;
  font-size: 0;
  height: 0;
  margin: 0;
  padding: 0;
  position: absolute;
  width: 0;
  z-index: 4;
}
.slick-next {
  border-left: 30px solid var(--color--grey);
  right: -90px;
}
.slick-next:hover,
.slick-next:active {
  background-color: transparent;
  border-left-color: var(--color--grey);
}
.slick-next.slick-disabled:hover,
.slick-next.slick-disabled:active {
  border-left-color: var(--color--grey);
}
@media all and (max-width: 1320px) {
  .slick-next {
    right: -3px;
  }
}
@media all and (max-width: 767px) {
  .slick-next {
    right: -30px;
  }
}
.slick-prev {
  border-right: 30px solid var(--color--grey);
  left: -90px;
}
.slick-prev:hover,
.slick-prev:active {
  background-color: transparent;
  border-right-color: var(--color--grey);
}
.slick-prev.slick-disabled:hover,
.slick-prev.slick-disabled:active {
  border-right-color: var(--color--grey);
}
@media all and (max-width: 1320px) {
  .slick-prev {
    left: 20px;
  }
}
@media all and (max-width: 767px) {
  .slick-prev {
    left: -10px;
  }
}
.slick-prev.slick-disabled,
.slick-next.slick-disabled {
  display: none !important;
}
.slick-slide {
  margin: 0 20px;
}
.slick-slide > div {
  display: contents;
  height: 100%;
}
.slick-slider article {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -moz-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  height: 100%;
  margin: 0;
  min-height: 270px; /* Hack for slideshows. Wish there was a better way. */
  min-width: inherit;
}
.slick-slider article article {
  height: auto;
  min-height: 0;
}

/**
 * Slick dots.
 */
.slick-dots {
  list-style: none;
  margin: 5px auto 10px;
  text-align: center;
}
.slick-dots > li {
  display: inline-block;
  margin: 0 10px;
}
.slick-dots button {
  background-color: var(--color--grey);
  border: 1px solid;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  color: var(--color--grey);
  font-size: 10px;
  margin: 0;
  padding: 1px 3px;
}
.slick-dots .slick-active button,
.slick-dots button:hover {
  background-color: var(--color--grey);
  border-color: var(--color--grey);
  color: var(--color--grey);
}
/* Attempt to override slick to use flex instead of float. */
.slick-track {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
}
.slick-track:before,
.slick-track:after {
  display: none;
}
.slick-slide {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: inherit;
  max-width: 780px;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  float: none;
}
@media all and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  /* Browser targeting hack to make max-width work in flex. */
  .slick-slide {
    flex-basis: 780px;
  }
}

/**
 * Extend/override the compro_custom social icons.
 */
.social {
  margin: 20px 0 0;
}
.social a[href]:before {
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  margin: 0 5px 5px 0;
  min-height: 16px;
  padding: 4px 7px 5px 9px;
  min-width: 16px;
  text-decoration: none;
}
.social a[href*="drupal.org"]:before {
  content: '\1f4a7';
}
.social a[href*="drupal.org"]:hover:before {
  background-color: var(--color--grey);
}

/**
 * Byline base class.
 */
.submitted {
  margin: 0 0 10px;
}

/**
 * Core tabs.
 */
ul.tabs {
  border-bottom: 1px solid;
  border-color: var(--color--grey);
  list-style: none;
  margin: 20px 0;
  overflow: hidden;
  padding: 0 0 0 1em;
}
ul.tabs > li {
  border-color: var(--color--grey);
  border-style: solid;
  border-width: 1px 1px 0;
  display: block;
  float: left;
  margin: 0 1em 0 0;
}
ul.tabs > li > a {
  color: var(--color--grey);
  display: inline-block;
  padding: 0.5em 1em;
  text-decoration: none;
}
ul.tabs > li > a:hover {
  background: var(--color--grey);
  color: var(--color--grey);
}
ul.tabs > li > a.active {
  background: var(--color--grey);
  color: var(--color--grey);
}
@media all and (max-width: 550px) {
  ul.tabs {
    border: 1px solid var(--color--grey);
    font-size: 0.8em;
    padding: 0;
  }
  ul.tabs > li {
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    border-radius: 0;
    border-width: 0 0 1px;
    float: none;
    margin: 0;
  }
  ul.tabs > li:last-child {
    border-width: 0;
  }
  ul.tabs > li > a {
    display: block;
  }
}

/**
 * The teaser--image area of node and term teasers.
 *
 * Other classes ensure a width of 160 and min-height 160.
 */
.teaser--image {
  background: var(--color--grey) url('../images/placeholder.png') center center scroll no-repeat;
  overflow: hidden;
  position: relative;
  text-align: center;
}
@media all and (max-width: 1023px) {
  .teaser--image {
    margin: 0 0 5px;
    width: 100% !important;
  }
}
.teaser--image img,
.teaser--image svg {
  display: inline;
  margin: 0 auto 0 -10px !important;
  max-width: inherit;
  min-height: 100% !important;
  min-width: 100% !important;
  position: absolute;
  width: auto;
}
@media all and (max-width: 1023px) {
  .teaser--image img,
  .teaser--image svg {
    height: auto !important;
    min-height: 100%;
    min-width: 100% !important;
  }
}
@media all and (max-width: 768px) {
  .teaser--image img,
  .teaser--image svg {
    margin: 0 !important;
  }
}

/**
 * Horizontally center children of the text-align--center class.
 *
 * If a parent has text-align--center while a child has a different text-align
 * class, it may be necessary to override those classes similarly (since the
 * specificity is higher that a bare class).
 */
.text-align--center figure,
.text-align--center img,
.text-align--center p,
.text-align--center picture,
.text-align--center svg,
.text-align--center video,
.text-align--justify figure,
.text-align--justify img,
.text-align--justify p,
.text-align--justify picture,
.text-align--justify svg,
.text-align--justify video,
[class*="text-align--"] .text-align--center img {
  margin: 0 auto 10px;
}
.text-align--left figure,
.text-align--left img,
.text-align--left picture,
.text-align--left svg,
.text-align--left video,
.text-align--right figure,
.text-align--right img,
.text-align--right picture,
.text-align--right svg,
.text-align--right video {
  margin: 0;
}
.text-align--left p,
.text-align--right p {
  margin: 0 0 10px;
}
.text-align--center p:last-child,
.text-align--justify p:last-child,
.text-align--left p:last-child,
.text-align--right p:last-child {
  margin-bottom: 0;
}

/**
 * User cards (rollover).
 */
.user.view-mode--teaser {
  margin: 0 auto;
  max-width: 480px;
}
@media all and (min-width: 768px) {
  .user.view-mode--teaser {
    min-width: 355px;
  }
}
.user.view-mode--teaser img {
  margin: 0;
}

/**
 * View headers.
 */
.view-header {
  margin: 0 0 20px;
}

/**
 * Consistent stylings per view mode.
 */
.view-mode--small {}

/**
 * Search page.
 */
.view-search .views-row {
  margin: 0 0 40px;
  max-width: 960px;
  max-width: 75ch;
}
@media all and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  /* Browser targeting hack. */
  .view-search .views-row {
    max-width: 100ch;
  }
}

/**
 * Widths for flex elements.
 */
.width--160px {
  width: 160px;
}
@media all and (min-width: 1024px) {
  .width--30p {
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 30%;
    -moz-box-flex: 0;
    -ms-flex: 0 1 30%;
    flex: 0 1 30%;
    width: 30%;
  }
}
